generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model User {
  id               String         @id @default(auto()) @map("_id") @db.ObjectId
  email            String         @unique
  firstName        String
  lastName         String
  userName         String? 
  password         String
  phone            String
  address          String?
  city             String?
  state            String?
  lga              String?
  promoCode        String?
  otp              Int?
  pin              String?
  token            String?
  bvn              Int?
  notificationKey  String?
  isPaypalVerified Boolean        @default(false)
  isVerified       Boolean?       @default(false)
  isActive         Boolean        @default(true)
  transactions     Transaction[]
  bankTransfers    Bank[]
  accounts         Account[]      @relation("account")
  cards            Card[]
  transferWise     TransferWise[]
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  Paypal           Paypal[]
  role             String?        @default("User")
}

model Transaction {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  amount          Float?
  currency        String?
  type            String?
  transactionType String?
  customer        String?
  status          String?
  reference       String?
  billerName      String?
  bank_name       String?
  narration       String?
  fee             Float    @default(0.00)
  createdAt       DateTime @default(now())
  user            User?    @relation(fields: [userId], references: [id])
  userId          String?  @db.ObjectId
  Bank            Bank[]
}

model Account {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  USDAccount Int?
  USDBank    String?
  NGNAccount String?
  NGNBank    String?
  EURAccount String?
  EURBank    String?
  GBPAccount String?
  GBPBank    String?
  USD        Float    @default(0.00)
  NGN        Float    @default(0.00)
  EUR        Float    @default(0.00)
  GBP        Float    @default(0.00)
  createdAt  DateTime @default(now())
  user       User?    @relation("account", fields: [userId], references: [id])
  userId     String   @db.ObjectId
}

model Bank {
  id               String       @id @default(auto()) @map("_id") @db.ObjectId
  account_bank     String
  account_number   String
  beneficiary_name String
  bank_name        String?
  amount           Int
  reference        String
  currency         String       @default("NGN")
  narration        String       @default("")
  status           String       @default("PENDING")
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  transactionId    String       @db.ObjectId
  Transaction      Transaction? @relation(fields: [transactionId], references: [id])
  User             User?        @relation(fields: [userId], references: [id])
  userId           String?      @db.ObjectId
}

model Card {
  id         String  @id @default(auto()) @map("_id") @db.ObjectId
  cardType   String?
  cardName   String?
  cardNo     String?
  expiration String?
  cvv        String?
  amount     String?
  currency   String?
  cardId     String?
  address    String?
  city       String?
  state      String?
  zipCode    String?
  status     String?

  createdAt DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
}

model Admin {
  id                               String   @id @default(auto()) @map("_id") @db.ObjectId
  exchangeUSD                      Float    @default(0.00)
  exchangeEUR                      Float    @default(0.00)
  exchangeGBP                      Float    @default(0.00)
  exchangeNGN                      Float    @default(0.00)
  exchangeFee                      Float    @default(0.00)
  paypalRate                       Float    @default(0.00)
  exchangeTransactionFeePercentage Float    @default(0.00)
  paypalEmail                      String?
  userRole                         String?  @default("ADMIN")
  createdAt                        DateTime @default(now())
  updatedAt                        DateTime @updatedAt
}

model Paypal {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  description  String?
  paymentLink  String?
  loginDetails String?
  currency     String?
  email        String?
  status       String   @default("PENDING")
  tradeAmount  Float    @default(0.00)
  fee          Float    @default(0.00)
  amount       Float    @default(0.00)
  user         User?    @relation(fields: [userId], references: [id])
  userId       String   @db.ObjectId
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model TransferWise {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  currency    String?
  email       String?
  description String?
  wiseDetails String?
  status      String   @default("PENDING")
  tradeAmount Float    @default(0.00)
  fee         Float    @default(0.00)
  amount      Float    @default(0.00)
  user        User?    @relation(fields: [userId], references: [id])
  userId      String   @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
