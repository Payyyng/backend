generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(auto()) @map("_id") @db.ObjectId
  email         String        @unique
  firstName     String
  lastName      String
  userName      String
  password      String
  phone         String
  address       String?
  city          String?
  state         String?
  lga           String?
  accountNumber String?
  promoCode     String?
  otp           Int?
  NGNBalance    Float         @default(0.00)
  USDBalance    Float         @default(0.00)
  EURBalance    Float         @default(0.00)
  GPBBalance    Float         @default(0.00)
  pin           String?
  token         String?
  bvn           Int?
  isVerified    Boolean?      @default(false)
  isActive      Boolean       @default(true)
  transactions  Transaction[]
  bankTransfers Bank[]
  accounts      Account[]     @relation("account")
  cards         Card[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Transaction {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  amount     Float?
  currency   String?
  type       String?
  customer   String?
  status     String?
  reference  String?
  billerName String?
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
  Bank       Bank[]
}

model Account {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  USDAccount Int?
  USDBank    String?
  NGNAccount Int?
  NGNBank    String?
  EURAccount Int?
  EURBank    String?
  GPBAccount Int?
  GPBBank    String?
  USD        Float    @default(0.00)
  NGN        Float    @default(0.00)
  EUR        Float    @default(0.00)
  GPB        Float    @default(0.00)
  createdAt  DateTime @default(now())
  user       User     @relation("account", fields: [userId], references: [id])
  userId     String   @db.ObjectId
}

model Bank {
  id               String       @id @default(auto()) @map("_id") @db.ObjectId
  account_bank     String
  account_number   String
  beneficiary_name String
  bank_name        String?
  amount           Int
  reference        String
  currency         String       @default("NGN")
  narration        String?
  status           String       @default("PENDING")
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  transactionId    String       @db.ObjectId
  Transaction      Transaction? @relation(fields: [transactionId], references: [id])
  User             User?        @relation(fields: [userId], references: [id])
  userId           String?      @db.ObjectId
}

model Card {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  cardType   String?
  cardName   String?
  cardNo     String?
  expiration String?
  cvv        String?
  cardId     String?
  address    String?
  city       String
  state      String
  zipCode    String?
  createdAt  DateTime @default(now())
  user       User?    @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId
}
